import solution from './7';

describe('1.7', () => {
    it('should rotate a matrix', () => {
        const cases = [
            [

                [
                    [0, 0, 0],
                    [1, 1, 1],
                    [2, 2, 2],
                ],
                [
                    [2, 1, 0],
                    [2, 1, 0],
                    [2, 1, 0],
                ]
            ],

            [
                [
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],                    
                ],
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
                    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                    [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
                    [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
                    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
                    [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                    [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
                ]
            ]
        ];
        for (let [before, after] of cases) {
            expect(solution(before)).toEqual(after);
        }
    });
})
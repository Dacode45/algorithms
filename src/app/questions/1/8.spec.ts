import solution from './8';

describe('1.8', () => {
    it('should zero a matrix', () => {
        const cases = [
            [
                [
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0],                    
                ],
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 3, 0, 5, 6, 0, 8, 9, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],                    
                ]
            ]
        ];
        for (let [before, after] of cases) {
            expect(solution(before)).toEqual(after);
        }
    });
})